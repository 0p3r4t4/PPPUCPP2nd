which g++ > /dev/null
gpp=$?
which clang++ > /dev/null
clangpp=$?
which clang-tidy > /dev/null
clangtidy=$?
which cppcheck > /dev/null
cppcheck=$?
compile=1

if [[ $gpp -eq 0 ]]; then 
    echo -e "== g++ ====================================\n"
    # If we want to compile more than one file, we must take all the 
    # arguments given to the script
    g++ -std=c++1z -Wall $*
    compile=$?
    echo
else
    echo -e "== No g++ compiler available!"
    echo -e "== Trying with clang++ ..."
    if [[ $clangpp -eq 0 ]]; then
        echo -e "== clang++ ================================\n"
        clang++ -std=c++1z -Wall $*
        compile=$?
        echo
    else
        echo -e "== No clang++ compiler available!"
        echo -e "== No compiler available!!"
        exit 1
    fi
fi

if [[ $compile -eq 0 ]]; then
    echo -e "== Compilation succesful! Proceed with static analysis ...\n"
    if [[ $clangtidy -eq 0 ]]; then
        echo -e "== clang-tidy =============================\n"
        clang-tidy $* -checks=*,-google-readability-braces-around-statements,-readability-braces-around-statements -- -std=c++1z -I/usr/include/c++/6/
        echo
    else
        echo -e "== No clang-tidy!\n"
    fi
    if [[ $cppcheck -eq 0 ]]; then
        echo -e "== cppcheck ===============================\n"
        cppcheck --enable=all $*
        echo
    else
        echo -e "== No cppcheck!\n"
    fi
else 
    exit 2
fi
